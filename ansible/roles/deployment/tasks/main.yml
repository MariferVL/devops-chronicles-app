---
- name: Update system packages
  apt:
    update_cache: yes
    upgrade: dist
  when: ansible_os_family == "Debian"

- name: Install Docker if not installed
  apt:
    name: docker.io
    state: present
  when: ansible_os_family == "Debian"

- name: Ensure Docker service is running
  service:
    name: docker
    state: started
    enabled: yes

- name: Create Python virtual environment
  command: python3 -m venv /opt/venv_ansible
  args:
    creates: /opt/venv_ansible/bin/activate
  when: ansible_os_family == "Debian"

- name: Upgrade pip in virtual environment
  command: /opt/venv_ansible/bin/pip install --upgrade pip
  when: ansible_os_family == "Debian"

- name: Ensure setuptools is installed in the virtual environment
  pip:
    name: setuptools
    virtualenv: /opt/venv_ansible
    state: present
  when: ansible_os_family == "Debian"

- name: Ensure botocore and boto3 are installed in the virtual environment
  pip:
    name:
      - botocore
      - boto3
    virtualenv: /opt/venv_ansible
    state: present
  when: ansible_os_family == "Debian"

- name: Deploy Application Container
  docker_container:
    name: devops_api
    image: "marifervl/devops-chronicles:latest"
    state: started
    restart_policy: always
    published_ports:
      - "5000:5000"
    env:
      FLASK_ENV: "production"  
      DB_HOST: "rds_endpoint"  
      DB_USER: "{{ lookup('aws_ssm', '/devops/DB_USER') }}"
      DB_PASS: "{{ lookup('aws_ssm', '/devops/DB_PASS') }}"
      DB_NAME: "{{ lookup('aws_ssm', '/devops/DB_NAME') }}"
      DB_ROOT_PASS: "{{ lookup('aws_ssm', '/devops/DB_ROOT_PASS') }}"
